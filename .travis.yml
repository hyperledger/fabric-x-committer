# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
language: go
arch: amd64
virt: vm
os: linux
dist: noble
go:
  - "1.24.3"

cache:
  directories:
    - $HOME/.cache/go-build # Cache the binaries
    - $HOME/gopath/pkg/mod # Cache the Go modules

services:
  - docker

stages:
  - lint
  - test

before_install:
  - export GO111MODULE=on
  - export GOPRIVATE=github.ibm.com
  - export DB_DEPLOYMENT=local
  - git config --global url."https://${GITHUB_USER}:${GITHUB_TOKEN}@github.ibm.com".insteadOf "https://github.ibm.com"
  # We use Python 3.12 for sqlfluff
  - pyenv global 3.12
  - export PYTHON_CMD="python3.12"

install:
  - scripts/install-dev-dependencies.sh

jobs:
  include:
    - stage: lint
      before_script:
        # Fetch main to only detect issues from changes to main
        - git fetch origin main:main
        # Apply formatting
        - gofmt -w .
        - goimports -local "github.ibm.com/decentralized-trust-research/scalable-committer" -w .
        # Re make protobufs, overwriting any formatting
        - PATH="$HOME/bin:$PATH" make proto
      script:
        # Check if original code changed due to formatting or protobuf generation
        - git diff | tee /dev/stderr | [ $(wc -c) -eq 0 ]
        # Run lint and test
        - make lint
    - stage: test
      name: Unit Test (non DB)
      script: travis_wait 30 make test-no-db
    - stage: test
      name: Fuzz Test (non DB)
      script: travis_wait 30 make test-fuzz
    - stage: test
      name: Requires and Core DB Tests (postgres)
      before_script: scripts/get-and-start-postgres.sh
      script: travis_wait 30 make test-requires-db test-core-db
    - stage: test
      name: Core DB Tests (yugabyte)
      before_script: scripts/get-and-start-yuga.sh
      script: travis_wait 30 make test-core-db
    - stage: test
      name: Integration Tests (yugabyte)
      before_script: scripts/get-and-start-yuga.sh
      script: travis_wait 30 make test-integration
    - stage: test
      name: Integration DB Resiliency (container)
      script: travis_wait 30 make test-integration-db-resiliency
    - stage: test
      name: Build and test all-in-one test image (container)
      script: travis_wait 30 make test-container -j16
