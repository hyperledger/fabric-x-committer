/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

option go_package = "github.com/hyperledger/fabric-x-committer/api/servicepb";

package servicepb;

import "google/protobuf/empty.proto";

import "api/committerpb/status.proto";
import "api/committerpb/ref.proto";
import "api/committerpb/config.proto";

import "api/servicepb/common.proto";

service Coordinator {
    rpc BlockProcessing(stream CoordinatorBatch) returns (stream committerpb.TxStatusBatch);
    rpc SetLastCommittedBlockNumber (committerpb.BlockRef) returns (google.protobuf.Empty) {};
    rpc GetNextExpectedBlockNumber (google.protobuf.Empty) returns (committerpb.BlockRef) {};
    rpc GetTransactionsStatus(committerpb.TxIDsBatch) returns (committerpb.TxStatusBatch);
    rpc GetConfigTransaction(google.protobuf.Empty) returns (committerpb.ConfigTransaction) {};
    rpc NumberOfWaitingTransactionsForStatus(google.protobuf.Empty) returns (WaitingTransactions);
}

// A committer's representation of a block in the blockchain.
message CoordinatorBatch {
    repeated servicepb.TxWithRef txs = 1;       // List of transactions within the block.
    repeated committerpb.TxStatus rejected = 2; // Rejected transactions.
}

message WaitingTransactions {
    int32 count = 1;
}
