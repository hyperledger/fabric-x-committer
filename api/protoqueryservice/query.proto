/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

option go_package = "github.com/hyperledger/fabric-x-committer/api/protoqueryservice";

package protoqueryservice;

import "api/protoblocktx/block_tx.proto";
import "api/protonotify/notify.proto";
import "google/protobuf/empty.proto";

service QueryService {
  rpc GetRows(Query) returns (Rows) {};
  rpc BeginView(ViewParameters) returns (View) {};
  rpc EndView(View) returns (View) {};
  rpc GetNamespacePolicies(google.protobuf.Empty) returns (protoblocktx.NamespacePolicies) {};
  rpc GetConfigTransaction(google.protobuf.Empty) returns (protoblocktx.ConfigTransaction) {};
  rpc GetTransactionStatus(TxStatusQuery) returns (TxStatusResponse) {};
}

message View {
  string id = 1;
}

message Query {
  optional View view = 1;
  repeated QueryNamespace namespaces = 2;
}

message Rows {
  repeated RowsNamespace namespaces = 1;
}

enum IsoLevel {
  Serializable = 0;
  RepeatableRead = 1;
  ReadCommitted = 2;
  ReadUncommitted = 3;
}

message ViewParameters {
  IsoLevel iso_level = 1;          // View's isolation level. Defaults to serializable.
  bool nonDeferrable = 2;          // Do not defer errors. Defaults deferrable.
  uint64 timeout_milliseconds = 3; // View's timeout. Zero => maximal value
}

message QueryNamespace {
  string ns_id = 1;
  repeated bytes keys = 2;
}

message RowsNamespace {
  string ns_id = 1;
  repeated Row rows = 2;
}

message Row {
  bytes key = 1;
  bytes value = 2;
  uint64 version = 3;
}

message TxStatusQuery {
  optional View view = 1;
  repeated string tx_ids = 2;  // List of transaction IDs.
}

message TxStatusResponse {
  repeated protonotify.TxStatusEvent statuses = 1;
}
