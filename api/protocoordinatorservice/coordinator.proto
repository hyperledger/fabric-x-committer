/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

option go_package = "github.com/hyperledger/fabric-x-committer/api/protocoordinatorservice";

package protocoordinatorservice;

import "api/protoblocktx/block_tx.proto";

service Coordinator {
    rpc BlockProcessing(stream Block) returns (stream protoblocktx.TransactionsStatus);
    rpc SetLastCommittedBlockNumber (protoblocktx.BlockInfo) returns (Empty) {};
    rpc GetLastCommittedBlockNumber (Empty) returns (protoblocktx.LastCommittedBlock) {};
    rpc GetNextExpectedBlockNumber (Empty) returns (protoblocktx.BlockInfo) {};
    rpc GetTransactionsStatus(protoblocktx.QueryStatus) returns (protoblocktx.TransactionsStatus);
    rpc GetConfigTransaction(Empty) returns (protoblocktx.ConfigTransaction) {};
    rpc NumberOfWaitingTransactionsForStatus(Empty) returns (WaitingTransactions);
}

// A committer's representation of a block in the blockchain.
message Block {
    uint64 number = 1;                  // The block number.
    repeated protoblocktx.Tx txs = 2;   // List of transactions within the block.
    repeated uint32 txs_num = 3;        // Transaction number within the block generated by the orderer.
    repeated TxStatusInfo rejected = 4; // Rejected transactions.
}

message TxStatusInfo {
    uint32 tx_num = 1;               // Transaction number within the block generated by the orderer.
    string id = 2;                   // Transaction ID.
    protoblocktx.Status status = 3;  // The reject reason.
}

message WaitingTransactions {
    int32 count = 1;
}

message Empty {
}
