//
//Copyright IBM Corp. All Rights Reserved.
//
//SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.29.3
// source: api/protocoordinatorservice/coordinator.proto

package protocoordinatorservice

import (
	protoblocktx "github.com/hyperledger/fabric-x-committer/api/protoblocktx"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A committer's representation of a block in the blockchain.
type Batch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txs      []*Tx           `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`           // List of transactions within the block.
	Rejected []*TxStatusInfo `protobuf:"bytes,2,rep,name=rejected,proto3" json:"rejected,omitempty"` // Rejected transactions.
}

func (x *Batch) Reset() {
	*x = Batch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocoordinatorservice_coordinator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Batch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Batch) ProtoMessage() {}

func (x *Batch) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocoordinatorservice_coordinator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Batch.ProtoReflect.Descriptor instead.
func (*Batch) Descriptor() ([]byte, []int) {
	return file_api_protocoordinatorservice_coordinator_proto_rawDescGZIP(), []int{0}
}

func (x *Batch) GetTxs() []*Tx {
	if x != nil {
		return x.Txs
	}
	return nil
}

func (x *Batch) GetRejected() []*TxStatusInfo {
	if x != nil {
		return x.Rejected
	}
	return nil
}

// A committer's representation of a TX in the blockchain.
type Tx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref     *TxRef           `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`         // The TX reference.
	Content *protoblocktx.Tx `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"` // The TX content.
}

func (x *Tx) Reset() {
	*x = Tx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocoordinatorservice_coordinator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tx) ProtoMessage() {}

func (x *Tx) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocoordinatorservice_coordinator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tx.ProtoReflect.Descriptor instead.
func (*Tx) Descriptor() ([]byte, []int) {
	return file_api_protocoordinatorservice_coordinator_proto_rawDescGZIP(), []int{1}
}

func (x *Tx) GetRef() *TxRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *Tx) GetContent() *protoblocktx.Tx {
	if x != nil {
		return x.Content
	}
	return nil
}

type TxStatusInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref    *TxRef              `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`                                 // The TX reference.
	Status protoblocktx.Status `protobuf:"varint,2,opt,name=status,proto3,enum=protoblocktx.Status" json:"status,omitempty"` // The reject reason.
}

func (x *TxStatusInfo) Reset() {
	*x = TxStatusInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocoordinatorservice_coordinator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxStatusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxStatusInfo) ProtoMessage() {}

func (x *TxStatusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocoordinatorservice_coordinator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxStatusInfo.ProtoReflect.Descriptor instead.
func (*TxStatusInfo) Descriptor() ([]byte, []int) {
	return file_api_protocoordinatorservice_coordinator_proto_rawDescGZIP(), []int{2}
}

func (x *TxStatusInfo) GetRef() *TxRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *TxStatusInfo) GetStatus() protoblocktx.Status {
	if x != nil {
		return x.Status
	}
	return protoblocktx.Status(0)
}

// The TX reference with respect to the block generated by the orderer.
type TxRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNum uint64 `protobuf:"varint,1,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"` // The block number.
	TxNum    uint32 `protobuf:"varint,2,opt,name=tx_num,json=txNum,proto3" json:"tx_num,omitempty"`          // Transaction number within the block
	TxId     string `protobuf:"bytes,3,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`              // Transaction ID within the block.
}

func (x *TxRef) Reset() {
	*x = TxRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocoordinatorservice_coordinator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxRef) ProtoMessage() {}

func (x *TxRef) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocoordinatorservice_coordinator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxRef.ProtoReflect.Descriptor instead.
func (*TxRef) Descriptor() ([]byte, []int) {
	return file_api_protocoordinatorservice_coordinator_proto_rawDescGZIP(), []int{3}
}

func (x *TxRef) GetBlockNum() uint64 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

func (x *TxRef) GetTxNum() uint32 {
	if x != nil {
		return x.TxNum
	}
	return 0
}

func (x *TxRef) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

type WaitingTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *WaitingTransactions) Reset() {
	*x = WaitingTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_protocoordinatorservice_coordinator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitingTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitingTransactions) ProtoMessage() {}

func (x *WaitingTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_api_protocoordinatorservice_coordinator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitingTransactions.ProtoReflect.Descriptor instead.
func (*WaitingTransactions) Descriptor() ([]byte, []int) {
	return file_api_protocoordinatorservice_coordinator_proto_rawDescGZIP(), []int{4}
}

func (x *WaitingTransactions) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_api_protocoordinatorservice_coordinator_proto protoreflect.FileDescriptor

var file_api_protocoordinatorservice_coordinator_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x74, 0x78, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x79, 0x0a, 0x05, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x2d, 0x0a, 0x03, 0x74, 0x78, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x78, 0x52, 0x03, 0x74, 0x78, 0x73, 0x12, 0x41,
	0x0a, 0x08, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x78, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x22, 0x62, 0x0a, 0x02, 0x54, 0x78, 0x12, 0x30, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54,
	0x78, 0x52, 0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x74, 0x78, 0x2e, 0x54, 0x78, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x6e, 0x0a, 0x0c, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x78, 0x52,
	0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x74, 0x78, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x50, 0x0a, 0x05, 0x54, 0x78, 0x52, 0x65, 0x66, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x74,
	0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x78, 0x4e,
	0x75, 0x6d, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x13, 0x57, 0x61, 0x69, 0x74, 0x69,
	0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x32, 0xfb, 0x04, 0x0a, 0x0b, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x57, 0x0a, 0x0f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x74, 0x78, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x28, 0x01, 0x30, 0x01, 0x12, 0x50, 0x0a,
	0x1b, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x74, 0x78, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x59, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x74, 0x78, 0x2e, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x4e, 0x65, 0x78, 0x74, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x74, 0x78, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x74, 0x78, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x74, 0x78, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x51, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x74, 0x78,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x24, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
	0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57,
	0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x42, 0x47, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x66, 0x61, 0x62,
	0x72, 0x69, 0x63, 0x2d, 0x78, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_protocoordinatorservice_coordinator_proto_rawDescOnce sync.Once
	file_api_protocoordinatorservice_coordinator_proto_rawDescData = file_api_protocoordinatorservice_coordinator_proto_rawDesc
)

func file_api_protocoordinatorservice_coordinator_proto_rawDescGZIP() []byte {
	file_api_protocoordinatorservice_coordinator_proto_rawDescOnce.Do(func() {
		file_api_protocoordinatorservice_coordinator_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_protocoordinatorservice_coordinator_proto_rawDescData)
	})
	return file_api_protocoordinatorservice_coordinator_proto_rawDescData
}

var file_api_protocoordinatorservice_coordinator_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_protocoordinatorservice_coordinator_proto_goTypes = []interface{}{
	(*Batch)(nil),                           // 0: protocoordinatorservice.Batch
	(*Tx)(nil),                              // 1: protocoordinatorservice.Tx
	(*TxStatusInfo)(nil),                    // 2: protocoordinatorservice.TxStatusInfo
	(*TxRef)(nil),                           // 3: protocoordinatorservice.TxRef
	(*WaitingTransactions)(nil),             // 4: protocoordinatorservice.WaitingTransactions
	(*protoblocktx.Tx)(nil),                 // 5: protoblocktx.Tx
	(protoblocktx.Status)(0),                // 6: protoblocktx.Status
	(*protoblocktx.BlockInfo)(nil),          // 7: protoblocktx.BlockInfo
	(*emptypb.Empty)(nil),                   // 8: google.protobuf.Empty
	(*protoblocktx.QueryStatus)(nil),        // 9: protoblocktx.QueryStatus
	(*protoblocktx.TransactionsStatus)(nil), // 10: protoblocktx.TransactionsStatus
	(*protoblocktx.LastCommittedBlock)(nil), // 11: protoblocktx.LastCommittedBlock
	(*protoblocktx.ConfigTransaction)(nil),  // 12: protoblocktx.ConfigTransaction
}
var file_api_protocoordinatorservice_coordinator_proto_depIdxs = []int32{
	1,  // 0: protocoordinatorservice.Batch.txs:type_name -> protocoordinatorservice.Tx
	2,  // 1: protocoordinatorservice.Batch.rejected:type_name -> protocoordinatorservice.TxStatusInfo
	3,  // 2: protocoordinatorservice.Tx.ref:type_name -> protocoordinatorservice.TxRef
	5,  // 3: protocoordinatorservice.Tx.content:type_name -> protoblocktx.Tx
	3,  // 4: protocoordinatorservice.TxStatusInfo.ref:type_name -> protocoordinatorservice.TxRef
	6,  // 5: protocoordinatorservice.TxStatusInfo.status:type_name -> protoblocktx.Status
	0,  // 6: protocoordinatorservice.Coordinator.BlockProcessing:input_type -> protocoordinatorservice.Batch
	7,  // 7: protocoordinatorservice.Coordinator.SetLastCommittedBlockNumber:input_type -> protoblocktx.BlockInfo
	8,  // 8: protocoordinatorservice.Coordinator.GetLastCommittedBlockNumber:input_type -> google.protobuf.Empty
	8,  // 9: protocoordinatorservice.Coordinator.GetNextExpectedBlockNumber:input_type -> google.protobuf.Empty
	9,  // 10: protocoordinatorservice.Coordinator.GetTransactionsStatus:input_type -> protoblocktx.QueryStatus
	8,  // 11: protocoordinatorservice.Coordinator.GetConfigTransaction:input_type -> google.protobuf.Empty
	8,  // 12: protocoordinatorservice.Coordinator.NumberOfWaitingTransactionsForStatus:input_type -> google.protobuf.Empty
	10, // 13: protocoordinatorservice.Coordinator.BlockProcessing:output_type -> protoblocktx.TransactionsStatus
	8,  // 14: protocoordinatorservice.Coordinator.SetLastCommittedBlockNumber:output_type -> google.protobuf.Empty
	11, // 15: protocoordinatorservice.Coordinator.GetLastCommittedBlockNumber:output_type -> protoblocktx.LastCommittedBlock
	7,  // 16: protocoordinatorservice.Coordinator.GetNextExpectedBlockNumber:output_type -> protoblocktx.BlockInfo
	10, // 17: protocoordinatorservice.Coordinator.GetTransactionsStatus:output_type -> protoblocktx.TransactionsStatus
	12, // 18: protocoordinatorservice.Coordinator.GetConfigTransaction:output_type -> protoblocktx.ConfigTransaction
	4,  // 19: protocoordinatorservice.Coordinator.NumberOfWaitingTransactionsForStatus:output_type -> protocoordinatorservice.WaitingTransactions
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_api_protocoordinatorservice_coordinator_proto_init() }
func file_api_protocoordinatorservice_coordinator_proto_init() {
	if File_api_protocoordinatorservice_coordinator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_protocoordinatorservice_coordinator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Batch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protocoordinatorservice_coordinator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protocoordinatorservice_coordinator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxStatusInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protocoordinatorservice_coordinator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_protocoordinatorservice_coordinator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitingTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_protocoordinatorservice_coordinator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_protocoordinatorservice_coordinator_proto_goTypes,
		DependencyIndexes: file_api_protocoordinatorservice_coordinator_proto_depIdxs,
		MessageInfos:      file_api_protocoordinatorservice_coordinator_proto_msgTypes,
	}.Build()
	File_api_protocoordinatorservice_coordinator_proto = out.File
	file_api_protocoordinatorservice_coordinator_proto_rawDesc = nil
	file_api_protocoordinatorservice_coordinator_proto_goTypes = nil
	file_api_protocoordinatorservice_coordinator_proto_depIdxs = nil
}
