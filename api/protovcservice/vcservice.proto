/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

option go_package = "github.com/hyperledger/fabric-x-committer/api/protovcservice";

package protovcservice;

import "api/protoblocktx/block_tx.proto";
import "api/protocoordinatorservice/coordinator.proto";
import "google/protobuf/empty.proto";

service ValidationAndCommitService {
  rpc StartValidateAndCommitStream (stream Batch) returns (stream protoblocktx.TransactionsStatus);
  rpc SetLastCommittedBlockNumber (protoblocktx.BlockInfo) returns (google.protobuf.Empty) {};
  rpc GetLastCommittedBlockNumber (google.protobuf.Empty) returns (protoblocktx.LastCommittedBlock) {};
  rpc GetTransactionsStatus (protoblocktx.QueryStatus) returns (protoblocktx.TransactionsStatus) {};
  rpc GetNamespacePolicies(google.protobuf.Empty) returns (protoblocktx.NamespacePolicies) {};
  rpc GetConfigTransaction(google.protobuf.Empty) returns (protoblocktx.ConfigTransaction) {};
  rpc SetupSystemTablesAndNamespaces(google.protobuf.Empty) returns (google.protobuf.Empty) {};
}

message Batch {
  repeated Tx transactions = 1;
}

message Tx {
  protocoordinatorservice.TxRef ref = 1;
  repeated protoblocktx.TxNamespace namespaces = 2;
  optional InvalidTxStatus prelim_invalid_tx_status = 3;
}

message InvalidTxStatus {
    protoblocktx.Status code = 1;
}
